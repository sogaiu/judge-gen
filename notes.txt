# LIMITS:
#
# * doesn't handle code that is not "well-formed"
#
# * newlines after comment blocks are currently considered part of the
#   identified comment block, this affects the searching for target
#   comment blocks.  to avoid including a comment block as a target,
#   place the cursor beyond the last non-whitespace character that
#   counts as part of the comment block (should be a closing paren)
#
# * likely only works with utf-8

# POSSIBILITIES:
#
# * identify each test by the line number its definition begins on
#   in the source file.  how can the line and column info be obtained?
#   the location information should be based on the original source and
#   not on the generated test file.
#
# * try to fix the issue of not successfully serializing test results.
#   could using marshaling / unmarshaling work?
#
# * would using recent janet-peg for parsing as well as rewriting
#   source be any better than the current approach?
#   * possibly easier to transform and output?
#   * possibly easier to determine line / column info for tests?
#
# * currently using `in-comment` var in `pegs.janet`.  this is ugly
#   and prone to error.  figure out a way to not have to use this.
#
# * could have option to send code to janet -k before main jg processing.
#   atm, `janet -k` doesn't appear to work for files that have
#   `(import ...)` in them, so this may not be an option.
#
# * consider various "rewriting" targets, e.g. testament, helper.janet
#   for "transition" purposes
#
# * in handle_one, instead of `(break false)`, perhaps different
#   values could be returned to indicate different types of errors
#
# * consider different reporting modes for jg.  concrete examples:
#
#   * for earliest / quickest feedback, have _verify output info as soon
#     as it is available
#
#   * for slower feedback, have _verify just pass back all test
#     results at the end when they are all ready
#
#   different receivers might be set up for handling test results, but
#   this may be getting too elaborate at this stage :)
#
# * produce code with comment blocks unwrapped inline -- test context is
#   is more likely to be correct than just appending tests after original
#   code

# ISSUES:
#
# * how to handle rather large return values -- load from external file?
#
# * how / whether to try to test output (such as from `print`) -- see
#   spork's `capture-stdout` for an idea
#
# * consider using :s instead of :ws in pegs, also in janet-peg-grammar

# QUESTIONS:
#
# * is the output from jg rewrite really jdn?  will it always be serializable /
#   deserializable?  this has been a problem.  perhaps marhsalling might
#   work better?
#
# * where to document usage of temporary directory to store test results and
#   output?
#
# * how to get the equivalent of `/tmp` on windows for the purpose of
#   creating a temporary directory to store test results and output?
#
# * provide a mode to work on stuff outside a comment block?
#
#   so for example the following at the top-level:
#
#     (def a 1)
#     # => 1
#
#   ought to work?
